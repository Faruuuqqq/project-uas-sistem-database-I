<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Account Page</title>

  <link href="/assets/img/favicon.png" rel="icon" />
  <link href="/assets/img/apple-touch-icon.png" rel="apple-touch-icon" />

  <link href="https://fonts.googleapis.com" rel="preconnect" />
  <link href="https://fonts.gstatic.com" rel="preconnect" crossorigin />
  <link
    href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Nunito:ital,wght@0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
    rel="stylesheet"
  />

  <link href="/assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
  <link href="/assets/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet" />
  <link href="/assets/vendor/swiper/swiper-bundle.min.css" rel="stylesheet" />
  <link href="/assets/vendor/aos/aos.css" rel="stylesheet" />
  <link href="/assets/vendor/glightbox/css/glightbox.min.css" rel="stylesheet" />
  <link href="/assets/vendor/drift-zoom/drift-basic.css" rel="stylesheet" />

  <link href="/assets/css/main.css" rel="stylesheet" />
  <link href="/assets/css/custom-toast.css" rel="stylesheet">
</head>
<body class="index-page">
  <%- include('partials/header') %>

  <main class="main">
    <div class="page-title light-background">
      <div class="container d-lg-flex justify-content-between align-items-center">
        <h1 class="mb-2 mb-lg-0">Account</h1>
        <nav class="breadcrumbs">
          <ol>
            <li><a href="/">Home</a></li>
            <li class="current">Account</li>
          </ol>
        </nav>
      </div>
    </div>

    <section id="account" class="account section">
      <div class="container" data-aos="fade-up" data-aos-delay="100">
        <div class="row g-4">
          <div class="col-lg-3">
            <div class="profile-menu collapse d-lg-block" id="profileMenu">
              <div class="user-info p-4 bg-white rounded shadow-sm mb-4" data-aos="fade-right"> <%# Increased padding, consistent shadow %>
                <div class="user-avatar text-center mb-3">
                  <img src="<%= user.avatar || '/assets/img/person/person-f-1.webp' %>" alt="Profile" class="rounded-circle border border-3 border-accent" style="width: 100px; height: 100px; object-fit: cover; border-color: var(--accent-color) !important;" loading="lazy"> <%# Added accent border %>
                  <span class="status-badge"><i class="bi bi-shield-check"></i></span>
                </div>
                <h4 class="text-center mb-1 text-heading"><%= user.name %></h4> <%# Apply text-heading color %>
                <p class="text-center text-default small"><%= user.email %></p> <%# Apply text-default color %>
                <div class="user-status text-center text-default"> <%# Apply text-default color %>
                  <i class="bi bi-award me-1"></i>
                  <span>Standard Member</span>
                </div>
              </div>

              <nav class="menu-nav p-3 bg-white rounded shadow-sm">
                <ul class="nav flex-column" role="tablist">
                  <li class="nav-item">
                    <a class="nav-link active" data-bs-toggle="tab" href="#orders">
                      <i class="bi bi-box-seam me-2"></i>
                      <span>My Orders</span>
                      <span class="badge rounded-pill bg-accent ms-auto"><%= orders.length %></span> <%# Accent badge %>
                    </a>
                  </li>
                  <li class="nav-item">
                    <a class="nav-link" data-bs-toggle="tab" href="#wishlist">
                      <i class="bi bi-heart me-2"></i>
                      <span>Wishlist</span>
                      <span class="badge rounded-pill bg-secondary ms-auto">0</span>
                    </a>
                  </li>
                  <li class="nav-item">
                    <a class="nav-link" data-bs-toggle="tab" href="#wallet">
                      <i class="bi bi-wallet2 me-2"></i>
                      <span>My Payments</span>
                      <span class="badge rounded-pill bg-accent ms-auto"><%= payments.length %></span> <%# Accent badge %>
                    </a>
                  </li>
                  <li class="nav-item">
                    <a class="nav-link" data-bs-toggle="tab" href="#addresses">
                      <i class="bi bi-geo-alt me-2"></i>
                      <span>My Addresses</span>
                      <span class="badge rounded-pill bg-accent ms-auto"><%= addresses.length %></span> <%# Accent badge %>
                    </a>
                  </li>
                  <li class="nav-item">
                    <a class="nav-link" data-bs-toggle="tab" href="#settings">
                      <i class="bi bi-gear me-2"></i>
                      <span>Account Settings</span>
                    </a>
                  </li>
                  <li class="nav-item mt-3 border-top pt-3"> <%# Separator for logout %>
                    <a class="nav-link text-danger" href="#" id="logoutButton">
                      <i class="bi bi-box-arrow-right me-2"></i>
                      <span>Log Out</span>
                    </a>
                  </li>
                </ul>
              </nav>
            </div>
          </div>

          <div class="col-lg-9">
            <div class="content-area p-4 bg-white rounded shadow-sm">
              <div class="tab-content">
                <div class="tab-pane fade show active" id="orders">
                  <div class="section-header mb-4 pb-2 border-bottom" data-aos="fade-up"> <%# Added border-bottom %>
                    <h2 class="text-heading">My Orders</h2> <%# Apply text-heading color %>
                  </div>

                  <div class="orders-grid">
                    <% if (orders && orders.length > 0) { %>
                      <% orders.forEach(order => { %>
                        <div class="order-card p-3 mb-3 border rounded" data-aos="fade-up" data-aos-delay="100">
                          <div class="order-header d-flex justify-content-between align-items-center mb-2">
                            <div class="order-id text-default"> <%# Apply text-default color %>
                              <span class="label text-muted">Order ID:</span>
                              <span class="value fw-bold">#<%= order.order_id %></span>
                            </div>
                            <div class="order-date text-muted small"><%= new Date(order.created_at).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' }) %></div>
                          </div>
                          <div class="order-content d-flex align-items-center gap-3">
                            <div class="product-grid flex-shrink-0">
                              <% if (order.items && order.items.length > 0) { %>
                                <img src="<%= order.items[0].image %>" alt="Product" class="img-fluid rounded" style="width: 80px; height: 80px; object-fit: cover;" loading="lazy">
                                <% if (order.items.length > 1) { %>
                                  <span class="small text-muted ms-2">+<%= order.items.length - 1 %> more</span>
                                <% } %>
                              <% } else { %>
                                <img src="/assets/img/placeholder_product.webp" alt="No Image" class="img-fluid rounded" style="width: 80px; height: 80px; object-fit: cover;" loading="lazy">
                              <% } %>
                            </div>
                            <div class="order-info flex-grow-1 text-default"> <%# Apply text-default color %>
                              <div class="info-row d-flex justify-content-between mb-1">
                                <span class="text-muted">Status</span>
                                <span class="status text-capitalize fw-bold <%= order.status.toLowerCase() === 'completed' ? 'text-success' : (order.status.toLowerCase() === 'pending' ? 'text-warning' : 'text-info') %>"><%= order.status %></span> <%# Dynamic status color, fw-bold %>
                              </div>
                              <div class="info-row d-flex justify-content-between mb-1">
                                <span class="text-muted">Items</span>
                                <span><%= order.items ? order.items.length : 0 %> items</span>
                              </div>
                              <div class="info-row d-flex justify-content-between">
                                <span class="text-muted">Total</span>
                                <span class="price fw-bold text-accent">$<%= parseFloat(order.total_price).toFixed(2) %></span> <%# Apply text-accent color %>
                              </div>
                            </div>
                          </div>
                          <div class="order-footer d-flex justify-content-end gap-2 pt-3 border-top mt-3">
                            <% if (order.status.toLowerCase() === 'pending') { %>
                              <a href="/payment?orderId=<%= order.order_id %>" class="btn btn-sm btn-accent">Complete Payment</a> <%# Changed to btn-accent %>
                            <% } %>
                            <a href="/orders/<%= order.order_id %>" class="btn btn-sm btn-outline-default">View Details</a> <%# Changed to btn-outline-default %>
                          </div>
                        </div>
                      <% }) %>
                    <% } else { %>
                      <p class="text-center text-muted py-4">You have no orders yet.</p>
                    <% } %>
                  </div>
                </div>

                <div class="tab-pane fade" id="wishlist">
                  <div class="section-header mb-4 pb-2 border-bottom" data-aos="fade-up">
                    <h2 class="text-heading">My Wishlist</h2>
                  </div>
                  <p class="text-center text-muted py-4">Your wishlist is empty. Start adding products you love!</p>
                </div>

                <div class="tab-pane fade" id="wallet">
                  <div class="section-header mb-4 pb-2 border-bottom" data-aos="fade-up">
                    <h2 class="text-heading">My Payments</h2>
                  </div>
                  <div class="payments-grid">
                    <% if (payments && payments.length > 0) { %>
                      <% payments.forEach(payment => { %>
                        <div class="payment-card p-3 mb-3 border rounded" data-aos="fade-up" data-aos-delay="100">
                          <div class="d-flex justify-content-between align-items-center mb-2">
                            <span class="fw-bold text-capitalize text-heading"><%= payment.method.replace('_', ' ') %></span> <%# Apply text-heading color %>
                            <span class="badge rounded-pill bg-<%= payment.status === 'paid' ? 'success' : (payment.status === 'pending' ? 'warning' : 'danger') %>"><%= payment.status %></span> <%# Dynamic status color %>
                          </div>
                          <p class="mb-1 text-default">Amount: $<%= parseFloat(payment.amount_paid).toFixed(2) %></p> <%# Apply text-default color %>
                          <p class="mb-1 text-muted small">Paid on: <%= new Date(payment.paid_at).toLocaleDateString() %></p>
                          <% if (payment.transaction_id) { %>
                            <p class="mb-0 text-muted small">Trans. ID: <%= payment.transaction_id %></p>
                          <% } %>
                          <div class="d-flex justify-content-end mt-2">
                            <a href="/payment/<%= payment.payment_id %>" class="btn btn-sm btn-outline-default">View Details</a> <%# Changed to btn-outline-default %>
                          </div>
                        </div>
                      <% }) %>
                    <% } else { %>
                      <p class="text-center text-muted py-4">No payment records found.</p>
                    <% } %>
                  </div>
                </div>

                <div class="tab-pane fade" id="addresses">
                  <div class="section-header mb-4 pb-2 border-bottom" data-aos="fade-up">
                    <h2 class="text-heading">My Addresses</h2>
                  </div>
                  <div class="addresses-grid">
                    <% if (addresses && addresses.length > 0) { %>
                      <% addresses.forEach(addr => { %>
                        <div class="address-card p-3 mb-3 border rounded" data-aos="fade-up" data-aos-delay="100" data-address-id="<%= addr.address_id %>">
                          <p class="fw-bold mb-1 text-default"><%= addr.address %></p> <%# Apply text-default color %>
                          <p class="mb-1 text-muted"><%= addr.city %>, <%= addr.postal_code %></p>
                          <p class="mb-0 text-muted small">Phone: <%= addr.phone %></p>
                          <div class="d-flex justify-content-end gap-2 mt-2">
                            <button type="button" class="btn btn-sm btn-outline-info edit-address-btn" data-address-id="<%= addr.address_id %>">Edit</button>
                            <button type="button" class="btn btn-sm btn-outline-danger delete-address-btn" data-address-id="<%= addr.address_id %>">Delete</button>
                          </div>
                        </div>
                      <% }) %>
                    <% } else { %>
                      <p class="text-center text-muted py-4">You have no saved addresses.</p>
                    <% } %>
                  </div>

                  <h5 class="mt-4 text-heading">Add/Edit Address</h5> <%# Apply text-heading color %>
                  <form id="addressForm" class="p-4 bg-light rounded shadow-sm"> <%# Increased padding, consistent shadow %>
                    <input type="hidden" id="addressIdToEdit">
                    <div class="mb-3">
                      <label for="phone" class="form-label">Phone Number</label>
                      <input type="tel" class="form-control" id="phone" name="phone" required>
                    </div>
                    <div class="mb-3">
                      <label for="address" class="form-label">Street Address</label>
                      <textarea class="form-control" id="address" name="address" rows="2" required></textarea>
                    </div>
                    <div class="row g-3 mb-3">
                      <div class="col-md-6">
                        <label for="city" class="form-label">City</label>
                        <input type="text" class="form-control" id="city" name="city" required>
                      </div>
                      <div class="col-md-6">
                        <label for="postal_code" class="form-label">Postal Code</label>
                        <input type="text" class="form-control" id="postal_code" name="postal_code" required>
                      </div>
                    </div>
                    <button type="submit" class="btn btn-accent" id="saveAddressBtn">Save Address</button> <%# Changed to btn-accent %>
                    <button type="button" class="btn btn-secondary d-none" id="cancelEditBtn">Cancel Edit</button>
                  </form>
                </div>

                <div class="tab-pane fade" id="settings">
                  <div class="section-header mb-4 pb-2 border-bottom" data-aos="fade-up">
                    <h2 class="text-heading">Account Settings</h2>
                  </div>
                  <form id="profileUpdateForm" class="p-4 bg-light rounded shadow-sm mb-4"> <%# Increased padding, consistent shadow %>
                    <h5 class="mb-3 text-default">Update Profile Information</h5> <%# Apply text-default color %>
                    <div class="mb-3">
                      <label for="profileName" class="form-label">Name</label>
                      <input type="text" class="form-control" id="profileName" name="name" value="<%= user.name %>" required>
                    </div>
                    <div class="mb-3">
                      <label for="profileEmail" class="form-label">Email Address</label>
                      <input type="email" class="form-control" id="profileEmail" name="email" value="<%= user.email %>" required>
                    </div>
                    <button type="submit" class="btn btn-accent">Update Profile</button> <%# Changed to btn-accent %>
                  </form>

                  <form id="passwordChangeForm" class="p-4 bg-light rounded shadow-sm"> <%# Increased padding, consistent shadow %>
                    <h5 class="mb-3 text-default">Change Password</h5> <%# Apply text-default color %>
                    <div class="mb-3">
                      <label for="currentEmail" class="form-label">Your Email</label>
                      <input type="email" class="form-control" id="currentEmail" name="email" value="<%= user.email %>" disabled>
                    </div>
                    <div class="mb-3">
                      <label for="oldPassword" class="form-label">Old Password</label>
                      <input type="password" class="form-control" id="oldPassword" name="oldPassword" required>
                    </div>
                    <div class="mb-3">
                      <label for="newPassword" class="form-label">New Password</label>
                      <input type="password" class="form-control" id="newPassword" name="newPassword" required>
                      <div class="form-text">Password must be at least 6 characters long.</div>
                    </div>
                    <button type="submit" class="btn btn-accent">Change Password</button> <%# Changed to btn-accent %>
                  </form>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section></main>

  <%- include('partials/footer') %>

  <a href="#" id="scroll-top" class="scroll-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>

  <div id="preloader"></div>

  <script src="/assets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
  <script src="/assets/vendor/php-email-form/validate.js"></script>
  <script src="/assets/vendor/swiper/swiper-bundle.min.js"></script>
  <script src="/assets/vendor/aos/aos.js"></script>
  <script src="/assets/vendor/imagesloaded/imagesloaded.pkgd.min.js"></script>
  <script src="/assets/vendor/isotope-layout/isotope.pkgd.min.js"></script>
  <script src="/assets/vendor/glightbox/js/glightbox.min.js"></script>
  <script src="/assets/vendor/drift-zoom/Drift.min.js"></script>
  <script src="/assets/vendor/purecounter/purecounter_vanilla.js"></script>

  <script src="/assets/js/main.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', () => {
      const addressForm = document.getElementById('addressForm');
      const addressIdToEditInput = document.getElementById('addressIdToEdit');
      const saveAddressBtn = document.getElementById('saveAddressBtn');
      const cancelEditBtn = document.getElementById('cancelEditBtn');
      const profileUpdateForm = document.getElementById('profileUpdateForm');
      const passwordChangeForm = document.getElementById('passwordChangeForm');
      const logoutButton = document.getElementById('logoutButton');

      // --- Addresses Tab Logic ---
      if (addressForm) {
        addressForm.addEventListener('submit', async (event) => {
          event.preventDefault();
          const addressId = addressIdToEditInput.value;
          const phone = document.getElementById('phone').value;
          const address = document.getElementById('address').value;
          const city = document.getElementById('city').value;
          const postal_code = document.getElementById('postal_code').value;

          const method = addressId ? 'PUT' : 'POST';
          const url = addressId ? `/addresses/${addressId}` : '/addresses';

          try {
            const response = await fetch(url, {
              method: method,
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ phone, address, city, postal_code })
            });
            const data = await response.json();

            if (response.ok) {
              window.showToast(data.message || 'Address saved successfully!', 'success', 1500, () => {
                window.location.reload();
              });
            } else {
              window.showToast('Failed to save address: ' + (data.message || 'An error occurred.'), 'error');
            }
          } catch (error) {
            console.error('Error saving address:', error);
            window.showToast('Network error while saving address.', 'error');
          }
        });
      }

      document.querySelectorAll('.edit-address-btn').forEach(button => {
        button.addEventListener('click', async (event) => {
          const addressId = event.target.dataset.addressId;
          try {
            const response = await fetch(`/addresses/${addressId}`);
            const addr = await response.json();

            if (response.ok && addr) {
              document.getElementById('phone').value = addr.phone;
              document.getElementById('address').value = addr.address;
              document.getElementById('city').value = addr.city;
              document.getElementById('postal_code').value = addr.postal_code;
              addressIdToEditInput.value = addressId;
              saveAddressBtn.textContent = 'Update Address';
              cancelEditBtn.classList.remove('d-none');
              const addressTabLink = document.querySelector('.nav-link[href="#addresses"]');
              if (addressTabLink && !addressTabLink.classList.contains('active')) {
                  const tab = new bootstrap.Tab(addressTabLink);
                  tab.show();
              }
            } else {
              window.showToast('Failed to load address details: ' + (addr.message || 'An error occurred.'), 'error');
            }
          } catch (error) {
            console.error('Error fetching address for edit:', error);
            window.showToast('Network error while fetching address details.', 'error');
          }
        });
      });

      document.querySelectorAll('.delete-address-btn').forEach(button => {
        button.addEventListener('click', async (event) => {
          const addressId = event.target.dataset.addressId;
          if (!confirm('Are you sure you want to delete this address?')) {
            return;
          }

          try {
            const response = await fetch(`/addresses/${addressId}`, { method: 'DELETE' });
            const data = await response.json();

            if (response.ok) {
              window.showToast(data.message || 'Address deleted successfully.', 'success', 1500, () => {
                window.location.reload();
              });
            } else {
              window.showToast('Failed to delete address: ' + (data.message || 'An error occurred.'), 'error');
            }
          }
          catch (error) {
            console.error('Error deleting address:', error);
            window.showToast('Network error while deleting address.', 'error');
          }
        });
      });

      if (cancelEditBtn) {
        cancelEditBtn.addEventListener('click', () => {
          addressForm.reset();
          addressIdToEditInput.value = '';
          saveAddressBtn.textContent = 'Save Address';
          cancelEditBtn.classList.add('d-none');
        });
      }

      // --- Account Settings Tab Logic ---
      if (profileUpdateForm) {
        profileUpdateForm.addEventListener('submit', async (event) => {
          event.preventDefault();
          const name = document.getElementById('profileName').value;
          const email = document.getElementById('profileEmail').value;

          try {
            const response = await fetch('/users/profile', {
              method: 'PUT',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ name, email })
            });

            const data = await response.json();
            if (response.ok) {
              window.showToast(data.message || 'Profile updated successfully!', 'success', 1500, () => {
                window.location.reload();
              });
            } else {
              window.showToast('Failed to update profile: ' + (data.message || 'An error occurred.'), 'error');
            }
          } catch (error) {
            console.error('Error updating profile:', error);
            window.showToast('Network error while updating profile.', 'error');
          }
        });
      }

      if (passwordChangeForm) {
        passwordChangeForm.addEventListener('submit', async (event) => {
          event.preventDefault();
          const email = document.getElementById('currentEmail').value;
          const oldPassword = document.getElementById('oldPassword').value;
          const newPassword = document.getElementById('newPassword').value;

          if (!email || !oldPassword || !newPassword) {
              window.showToast('All password fields are required.', 'warning');
              return;
          }
          if (newPassword.length < 6) {
              window.showToast('New password must be at least 6 characters long.', 'warning');
              return;
          }

          try {
            const response = await fetch('/users/change-password', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ email, oldPassword, newPassword })
            });

            const data = await response.json();
            if (response.ok) {
              window.showToast(data.success || 'Password changed successfully!', 'success', 1500, () => {
                passwordChangeForm.reset();
              });
            } else {
              window.showToast('Failed to change password: ' + (data.error || data.message || 'An error occurred.'), 'error');
            }
          } catch (error) {
            console.error('Error changing password:', error);
            window.showToast('Network error while changing password.', 'error');
          }
        });
      }

      // --- Logout Functionality ---
      if (logoutButton) {
        logoutButton.addEventListener('click', async (event) => {
          event.preventDefault();
          if (!confirm('Are you sure you want to log out?')) {
              return;
          }
          try {
              const response = await fetch('/users/logout', { method: 'POST' });
              const data = await response.json();
              if (response.ok) {
                  window.showToast(data.message || 'Logout successful!', 'success', 1500, () => {
                      window.location.href = '/users/login-register';
                  });
              } else {
                  window.showToast('Logout failed: ' + (data.message || 'An error occurred.'), 'error');
              }
          } catch (error) {
              console.error('Error logging out:', error);
              window.showToast('Network error during logout.', 'error');
          }
        });
      }
    });
</script>
</body>
</html>