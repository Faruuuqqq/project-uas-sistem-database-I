<section id="product-list" class="product-list section">
  <div class="container isotope-layout" data-aos="fade-up" data-aos-delay="100" data-default-filter="*" data-layout="masonry" data-sort="original-order">
    <div class="row">
      <div class="col-12">
        <div class="product-filters isotope-filters mb-5 d-flex justify-content-center" data-aos="fade-up">
          <ul class="d-flex flex-wrap gap-2 list-unstyled">
            <li class="filter-active" data-filter="*">All</li>
            <% categories.forEach(category => { %>
              <li data-filter=".filter-<%= category.name %>"><%= category.name %></li>
            <% }) %>
          </ul>
        </div>
      </div>
    </div>
    <div class="row product-container isotope-container" data-aos="fade-up" data-aos-delay="200">
      <!-- Dynamically render products from database -->
      <% products.forEach(product => { %>
        <div class="col-md-6 col-lg-3 product-item isotope-item filter-<%= product.category %>">
          <div class="product-card">
            <div class="product-image">
              <% if (product.sale) { %>
                <span class="badge">Sale</span>
              <% } %>
              
              <img src="<%= product.image %>" alt="<%= product.name %>" class="img-fluid main-img">
              <%# Modifikasi untuk gambar hover %>
                    <%
                      let hoverImage = '';
                      // Memastikan product.image ada sebelum memodifikasi
                      if (product.image) {
                        // Mengambil path tanpa ekstensi (misalnya '/assets/img/medium_roast_coffee_blend')
                        const lastDotIndex = product.image.lastIndexOf('.');
                        const pathWithoutExt = lastDotIndex !== -1 ? product.image.substring(0, lastDotIndex) : product.image;
                        const ext = lastDotIndex !== -1 ? product.image.substring(lastDotIndex) : '';

                        // Menggabungkan kembali dengan .2 dan ekstensi asli
                        hoverImage = pathWithoutExt + '.2' + ext;
                      }
                    %>
                    <% if (hoverImage) { %>
                      <img src="<%= hoverImage %>" alt="<%= product.name %> Hover" class="hover-img" loading="lazy">
                    <% } %>
              <div class="product-overlay">
                <button class="btn-cart" data-product-id="<%= product.product_id %>" data-product-name="<%= product.name %>" data-product-price="<%= product.price %>" data-product-image="<%= product.image %>">
                  <i class="bi bi-cart-plus"></i> Add to Cart
                </button>
                <div class="product-actions">
                  <a href="#" class="action-btn"><i class="bi bi-heart"></i></a>
                  <a href="/products/<%= product.product_id %>" class="action-btn"><i class="bi bi-eye"></i></a>
                  <a href="#" class="action-btn"><i class="bi bi-arrow-left-right"></i></a>
                </div>
              </div>
            </div>
            <div class="product-info">
              <h5 class="product-title"><a href="/products/<%= product.product_id %>"><%= product.name %></a></h5>
              <div class="product-price">
                <% if (product.salePrice && product.salePrice < product.price) { %>
                  <span class="current-price">$<%= product.salePrice%></span>
                  <span class="old-price">$<%= product.price %></span>
                <% } else { %>
                  <span>$<%= product.price %></span>
                <% } %>
              </div>
            </div>
          </div>
        </div>
      <% }) %>
    </div>
  </div>
</section>
<!-- /Product List Section -->

<script>
  // Add event listeners for the "Add to Cart" buttons
  document.querySelectorAll('.btn-cart').forEach(button => {
    button.addEventListener('click', function (event) {
      const productId = this.getAttribute('data-product-id');
      const quantity = 1;  // For simplicity, we're assuming 1 quantity for now

      fetch('/carts/add', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ productId, quantity })
      })
      .then(response => response.json())
      .then(data => {
        alert(data.message || 'Item added to cart successfully!');
      })
      .catch(error => console.error('Error:', error));
    });

      // --- Add to Cart Functionality (menggunakan Toast) ---
  document.querySelectorAll('.btn-cart').forEach(button => {
    button.addEventListener('click', function (event) {
      const productId = this.getAttribute('data-product-id');
      const quantity = 1;

      fetch('/carts/add', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ productId, quantity })
      })
      .then(response => {
        if (!response.ok) {
            // Throw error to be caught by the catch block
            return response.json().then(errorData => {
                throw new Error(errorData.error || errorData.message || 'Failed to add item to cart.');
            });
        }
        return response.json();
      })
      .then(data => {
        window.showToast(data.message || 'Product added to cart successfully!', 'success');
        // Opsional: perbarui badge keranjang di header
        // if (window.updateCartItemCount) {
        //     window.updateCartItemCount();
        // }
      })
      .catch(error => {
        console.error('Error:', error);
        window.showToast(error.message || 'A network or server error occurred.', 'error');
      });
    });
  });
});
</script>
