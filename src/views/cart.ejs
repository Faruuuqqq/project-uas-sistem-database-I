<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <meta name="description" content="Lihat keranjang belanja Anda di Stay Awake Coffee. Kelola produk, perbarui kuantitas, dan lanjutkan ke checkout.">
    <meta name="keywords" content="keranjang, belanja, cart, produk, checkout, kopi">

    <link href="/assets/img/favicon.png" rel="icon">
    <link href="/assets/img/apple-touch-icon.png" rel="apple-touch-icon">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,800;1,900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Nunito:ital,wght@0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
    
    <link href="/assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/vendor/aos/aos.css" rel="stylesheet">
    <link href="/assets/vendor/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="/assets/vendor/swiper/swiper-bundle.min.css" rel="stylesheet">
    <link href="/assets/vendor/drift-zoom/drift-basic.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.12.2/dist/sweetalert2.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">

    <link href="/assets/css/main.css" rel="stylesheet">
    
    <style>
        /* Styling khusus untuk halaman keranjang */
        .cart-item-image img {
            max-width: 100%;
            height: auto;
        }
        .loading-spinner-container {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 200px;
            flex-direction: column;
            gap: 15px;
        }
        .loading-spinner {
            width: 3rem;
            height: 3rem;
        }
        .cart-item {
            border: 1px solid #eee;
            border-radius: 8px;
            padding: 15px;
            background-color: #fff;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
            align-items: center;
        }
        .cart-item .product-image {
            width: 100px;
            height: 100px;
            overflow: hidden;
            border-radius: 5px;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: var(--background-color);
        }
        .cart-item .product-image img {
            width: 100%;
            height: 100%;
            object-fit: contain;
        }
        .cart-item .product-details {
            margin-left: 15px;
            flex-grow: 1;
        }
        .cart-item .product-details .product-title {
            font-size: 1.1em;
            font-weight: 600;
        }
        .cart-item .product-details .product-meta {
            font-size: 0.85em;
            color: #666;
        }
        .cart-item .remove-item {
            font-size: 0.9em;
            color: var(--default-color);
            text-decoration: none;
            margin-top: 5px;
            display: inline-block;
        }
        .cart-item .price-tag {
            font-size: 1.0em;
            font-weight: 700;
            color: var(--accent-color);
            min-width: 80px; /* Lebar minimum untuk harga */
            text-align: right;
        }
        .cart-item .quantity-selector {
            display: flex;
            align-items: center;
            border: 1px solid #ccc;
            border-radius: 5px;
            overflow: hidden;
            width: 120px; /* Lebar tetap */
        }
        .cart-item .quantity-btn {
            background-color: #f8f8f8;
            border: none;
            padding: 8px 12px;
            cursor: pointer;
            font-size: 1.0em;
        }
        .cart-item .quantity-input {
            width: 40px;
            text-align: center;
            border: none;
            outline: none;
            font-size: 1.0em;
        }
        .cart-item .quantity-input::-webkit-outer-spin-button,
        .cart-item .quantity-input::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }
        .cart-item .item-total {
            font-size: 1.1em;
            font-weight: 700;
            color: var(--heading-color);
            min-width: 100px; /* Lebar minimum untuk total item */
            text-align: right;
        }
        .cart-summary {
            background-color: #fff;
            padding: 25px;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
            top: 20px; /* Untuk sticky-top */
        }
        .cart-summary .summary-title {
            font-size: 1.4em;
            font-weight: 700;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid #eee;
            color: var(--heading-color);
        }
        .cart-summary .summary-item {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
            font-size: 1.0em;
            color: var(--default-color);
        }
        .cart-summary .summary-total {
            font-size: 1.2em;
            font-weight: 700;
            color: var(--heading-color);
            margin-top: 20px;
            padding-top: 15px;
            border-top: 1px dashed #ccc;
            display: flex;
            justify-content: space-between;
        }
        .cart-summary .checkout-button button {
            margin-top: 20px;
            padding: 12px 20px;
            font-size: 1.1em;
        }
    </style>
</head>
<body class="cart-page">
    <%- include('./partials/header.ejs', { user: user, cartItemCount: cartItemCount }) %>

    <main id="main">
        <div class="page-title light-background">
            <div class="container d-lg-flex justify-content-between align-items-center">
                <h1 class="mb-2 mb-lg-0">Shopping Cart</h1>
                <nav class="breadcrumbs">
                    <ol>
                        <li><a href="/">Home</a></li>
                        <li class="current">Cart</li>
                    </ol>
                </nav>
            </div>
        </div>

        <section id="cart" class="cart section">
            <div class="container" data-aos="fade-up">
                <div class="row g-4">
                    <div class="col-lg-8">
                        <div class="cart-items" id="cart-items-container">
                            <div class="cart-header">
                                <h5>Your Cart (<span id="total-cart-items">0</span> Items)</h5>
                            </div>
                            <div class="loading-spinner-container">
                                <div class="spinner-border text-primary loading-spinner" role="status">
                                    <span class="visually-hidden">Memuat keranjang...</span>
                                </div>
                                <p class="text-center text-muted">Memuat item keranjang...</p>
                            </div>
                        </div>
                        <div class="d-flex justify-content-between mt-3">
                            <a href="/products" class="btn btn-outline-accent"><i class="bi bi-arrow-left me-2"></i>Continue Shopping</a>
                            <button id="clear-cart-btn" class="btn btn-outline-danger"><i class="bi bi-trash me-2"></i>Clear Cart</button>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="cart-summary sticky-top" id="cart-summary-container">
                            <h4 class="summary-title">Cart Summary</h4>
                            <div class="summary-item">
                                <span class="summary-label">Subtotal</span>
                                <span class="summary-value" id="summary-subtotal">$0</span>
                            </div>
                            <div class="summary-item">
                                <span class="summary-label">Shipping</span>
                                <div class="shipping-options">
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="shippingOption" id="standardShipping" value="15000" checked>
                                        <label class="form-check-label" for="standardShipping">
                                            Standard Shipping ($10.00)
                                        </label>
                                    </div>
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="shippingOption" id="expressShipping" value="30000">
                                        <label class="form-check-label" for="expressShipping">
                                            Express Shipping ($15.00)
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <div class="summary-item">
                                <span class="summary-label">Discount</span>
                                <span class="summary-value discount" id="summary-discount">$0</span>
                            </div>
                            <div class="summary-total">
                                <span class="summary-label">Total</span>
                                <span class="summary-value" id="summary-total">$0</span>
                            </div>
                            <div class="checkout-button">
                                <button class="btn btn-primary w-100" id="proceed-to-checkout-btn">Proceed to Checkout <i class="bi bi-arrow-right"></i></button>
                            </div>
                            <div class="payment-methods mt-4">
                                <p class="payment-title">We accept:</p>
                                <div class="payment-icons">
                                    <i class="bi bi-credit-card" aria-label="Credit Card"></i>
                                    <i class="bi bi-paypal" aria-label="PayPal"></i>
                                    <i class="bi bi-apple" aria-label="Apple Pay"></i>
                                    <i class="bi bi-google" aria-label="Google Pay"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </main>

    <%- include('./partials/footer.ejs') %>

    <script src="/assets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/vendor/aos/aos.js"></script>
    <script src="/assets/vendor/glightbox/js/glightbox.min.js"></script>
    <script src="/assets/vendor/swiper/swiper-bundle.min.js"></script>
    <script src="/assets/vendor/purecounter/purecounter_vanilla.js"></script>
    <script src="/assets/vendor/php-email-form/validate.js"></script>
    <script src="/assets/vendor/imagesloaded/imagesloaded.pkgd.min.js"></script>
    <script src="/assets/vendor/isotope-layout/isotope.pkgd.min.js"></script>
    <script src="/assets/vendor/drift-zoom/Drift.min.js"></script>
    
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.12.2/dist/sweetalert2.all.min.js"></script>

    <script src="/assets/js/main.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const cartItemsContainer = document.getElementById('cart-items-container');
            const totalCartItemsSpan = document.getElementById('total-cart-items');
            const summarySubtotalSpan = document.getElementById('summary-subtotal');
            const summaryTotalSpan = document.getElementById('summary-total');
            const clearCartBtn = document.getElementById('clear-cart-btn');
            const proceedToCheckoutBtn = document.getElementById('proceed-to-checkout-btn');
            const shippingOptions = document.querySelectorAll('input[name="shippingOption"]');

            let cartData = { items: [], subtotal: 0, shippingCost: 0, discount: 0, total: 0 };

            // Fungsi untuk memperbarui ringkasan keranjang
            function updateCartSummary() {
                let subtotal = cartData.items.reduce((sum, item) => sum + (item.price * item.quantity), 0);
                let shippingCost = 0;
                shippingOptions.forEach(option => {
                    if (option.checked) {
                        shippingCost = parseFloat(option.value); // Ambil nilai biaya dari radio button
                    }
                });
                let total = subtotal + shippingCost; 

                cartData.subtotal = subtotal;
                cartData.shippingCost = shippingCost;
                cartData.total = total;

                totalCartItemsSpan.textContent = cartData.items.length;
                summarySubtotalSpan.textContent = `${new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(subtotal)}`;
                summaryTotalSpan.textContent = `${new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(total)}`;
                // Diskon belum diimplementasikan, jadi tetap $0
            }

            // Fungsi untuk merender item keranjang
            function renderCartItems() {
                cartItemsContainer.innerHTML = `
                    <div class="cart-header">
                        <h5>Your Cart (<span id="total-cart-items">${cartData.items.length}</span> Items)</h5>
                    </div>
                `;
                if (cartData.items && cartData.items.length > 0) {
                    cartData.items.forEach(item => {
                        const itemHtml = `
                            <div class="cart-item d-flex align-items-center mb-3">
                                <div class="product-info d-flex align-items-center flex-grow-1">
                                    <div class="product-image me-3">
                                        <img src="${item.image || 'https://placehold.co/100x100/EAEAEA/555555?text=No+Image'}" 
                                             alt="${item.name}" class="img-fluid rounded-3" 
                                             onerror="this.onerror=null;this.src='https://placehold.co/100x100/EAEAEA/555555?text=No+Image';">
                                    </div>
                                    <div class="product-details flex-grow-1">
                                        <h6 class="product-title"><a href="/products/${item.product_id}">${item.name}</a></h6>
                                        <div class="product-meta">
                                            <span>Price: $${new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(item.price)}</span>

                                            <% /* Anda bisa menambahkan SKU, Size, dll. jika ada di data item */ %>
                                        </div>
                                        <button class="remove-item btn btn-link text-danger p-0" data-product-id="${item.product_id}"><i class="bi bi-trash me-1"></i>Remove</button>
                                    </div>
                                </div>
                                <div class="quantity-selector me-3">
                                    <button class="quantity-btn decrease-qty" data-product-id="${item.product_id}"><i class="bi bi-dash"></i></button>
                                    <input type="text" class="quantity-input" value="${item.quantity}" data-product-id="${item.product_id}" data-max-stock="${item.stock}" readonly>
                                    <button class="quantity-btn increase-qty" data-product-id="${item.product_id}"><i class="bi bi-plus"></i></button>
                                </div>
                                <div class="item-total text-nowrap">
                                    <span> ${new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(item.price)}</span>
                                </div>
                            </div>
                        `;
                        cartItemsContainer.insertAdjacentHTML('beforeend', itemHtml);
                    });

                    // Lampirkan event listener untuk tombol kuantitas
                    cartItemsContainer.querySelectorAll('.increase-qty').forEach(btn => {
                        btn.addEventListener('click', () => updateCartItem(parseInt(btn.dataset.productId), 1));
                    });
                    cartItemsContainer.querySelectorAll('.decrease-qty').forEach(btn => {
                        btn.addEventListener('click', () => updateCartItem(parseInt(btn.dataset.productId), -1));
                    });
                    cartItemsContainer.querySelectorAll('.remove-item').forEach(btn => {
                        btn.addEventListener('click', () => removeCartItem(parseInt(btn.dataset.productId)));
                    });

                } else {
                    cartItemsContainer.innerHTML += '<p class="text-center py-5 text-muted">Keranjang Anda kosong.</p>';
                }
                updateCartSummary(); // Perbarui ringkasan setelah merender item
            }

            // Fungsi untuk mengambil item keranjang dari backend
            async function fetchCartItems() {
                try {
                    const token = localStorage.getItem('jwtToken');
                    // Log token
                    console.log('Cart Page: Token for fetching cart:', token);

                    if (!token) {
                        // Jika tidak ada token, langsung tunjukkan peringatan login
                        if (typeof window.showAlert === 'function') {
                            window.showAlert('Anda perlu login untuk melihat keranjang Anda.', 'warning');
                            setTimeout(() => { window.location.href = '/auth/login'; }, 1500);
                        } else {
                            console.error("window.showAlert is not defined. Falling back to alert.");
                            alert('Anda perlu login untuk melihat keranjang Anda.');
                        }
                        return; // Penting: Hentikan eksekusi jika tidak ada token
                    }

                    const response = await fetch('/api/carts', {
                        headers: { 'Authorization': `Bearer ${token}` }
                    });

                    if (!response.ok) {
                        const errorData = await response.json();
                        // Log respons error lengkap dari backend
                        console.error('Cart Page: API Error Response for Cart:', errorData);
                        throw new Error(errorData.message || 'Gagal memuat keranjang.');
                    }
                    
                    const result = await response.json();
                    cartData.items = result.data.items || [];
                    renderCartItems(); // Render setelah data diambil
                } catch (error) {
                    console.error('Error fetching cart items:', error);
                    cartItemsContainer.innerHTML = `
                        <p class="text-center py-5 text-danger">Gagal memuat keranjang: ${error.message}</p>
                    `;
                    if (typeof window.showAlert === 'function') {
                        window.showAlert(`Gagal memuat keranjang: ${error.message}`, 'error');
                    } else {
                        console.error("window.showAlert is not defined. Falling back to alert.");
                        alert(`Gagal memuat keranjang: ${error.message}`);
                    }
                }
            }

            // Fungsi untuk memperbarui item keranjang (menambah/mengurangi kuantitas)
            async function updateCartItem(productId, change) {
                const item = cartData.items.find(i => i.product_id == productId);
                if (!item) return;

                let newQuantity = item.quantity + change;
                const maxStock = item.stock; // Ambil max stock dari item yang sudah dimuat

                if (newQuantity < 0) newQuantity = 0; // Kuantitas tidak boleh negatif
                if (newQuantity > maxStock) {
                    window.showAlert(`Stok produk "${item.name}" tidak mencukupi. Hanya tersedia ${maxStock} unit.`, 'warning');
                    newQuantity = maxStock; // Set ke max stock yang tersedia
                    if (newQuantity === 0 && item.quantity > 0) { // Jika setelah mencoba tambah, jadi 0 karena stok memang 0
                        removeCartItem(productId); // Hapus jika jadi 0
                        return;
                    } else if (newQuantity === item.quantity) { // Jika kuantitas sudah maksimal
                        return; // Jangan lakukan update API
                    }
                }
                
                // Jika newQuantity menjadi 0, panggil removeCartItem secara langsung
                if (newQuantity === 0) {
                    removeCartItem(productId);
                    return;
                }

                try {
                    const token = localStorage.getItem('jwtToken');
                    const response = await fetch('/api/carts', { // PUT /api/carts untuk update item
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': `Bearer ${token}`
                        },
                        body: JSON.stringify({ productId, quantity: newQuantity })
                    });

                    const data = await response.json();

                    if (response.ok) {
                        window.showAlert(data.message, 'success');
                        fetchCartItems(); // Refresh keranjang setelah update
                        if (typeof window.updateCartItemCount === 'function') {
                            window.updateCartItemCount();
                        }
                    } else {
                        window.showAlert(data.message || 'Gagal memperbarui kuantitas item.', 'error');
                    }
                } catch (error) {
                    console.error('Error updating cart item:', error);
                    window.showAlert('Terjadi kesalahan jaringan atau server saat memperbarui item.', 'error');
                }
            }

            // Fungsi untuk menghapus item dari keranjang
            async function removeCartItem(productId) {
                Swal.fire({
                    title: 'Konfirmasi',
                    text: 'Anda yakin ingin menghapus item ini dari keranjang?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Ya, Hapus!',
                    cancelButtonText: 'Batal',
                    customClass: {
                        confirmButton: 'btn btn-danger me-2',
                        cancelButton: 'btn btn-secondary'
                    },
                    buttonsStyling: false
                }).then(async (result) => {
                    if (result.isConfirmed) {
                        try {
                            const token = localStorage.getItem('jwtToken');
                            const response = await fetch(`/api/carts/${productId}`, { // DELETE /api/carts/:productId
                                method: 'DELETE',
                                headers: { 'Authorization': `Bearer ${token}` }
                            });

                            const data = await response.json();

                            if (response.ok) {
                                window.showAlert(data.message, 'success');
                                fetchCartItems(); // Refresh keranjang setelah hapus
                                if (typeof window.updateCartItemCount === 'function') {
                                    window.updateCartItemCount();
                                }
                            } else {
                                window.showAlert(data.message || 'Gagal menghapus item.', 'error');
                            }
                        } catch (error) {
                            console.error('Error removing cart item:', error);
                            window.showAlert('Terjadi kesalahan jaringan atau server saat menghapus item.', 'error');
                        }
                    }
                });
            }

            // Fungsi untuk mengosongkan seluruh keranjang
            async function clearCart() {
                Swal.fire({
                    title: 'Konfirmasi',
                    text: 'Anda yakin ingin mengosongkan seluruh keranjang?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Ya, Kosongkan!',
                    cancelButtonText: 'Batal',
                    customClass: {
                        confirmButton: 'btn btn-danger me-2',
                        cancelButton: 'btn btn-secondary'
                    },
                    buttonsStyling: false
                }).then(async (result) => {
                    if (result.isConfirmed) {
                        try {
                            const token = localStorage.getItem('jwtToken');
                            const response = await fetch('/api/carts', { // DELETE /api/carts
                                method: 'DELETE',
                                headers: { 'Authorization': `Bearer ${token}` }
                            });

                            const data = await response.json();

                            if (response.ok) {
                                window.showAlert(data.message, 'success');
                                cartData.items = []; // Kosongkan data keranjang di frontend
                                renderCartItems(); // Render ulang untuk menunjukkan kosong
                                if (typeof window.updateCartItemCount === 'function') {
                                    window.updateCartItemCount();
                                }
                            } else {
                                window.showAlert(data.message || 'Gagal mengosongkan keranjang.', 'error');
                            }
                        } catch (error) {
                            console.error('Error clearing cart:', error);
                            window.showAlert('Terjadi kesalahan jaringan atau server saat mengosongkan keranjang.', 'error');
                        }
                    }
                });
            }

            // Event Listeners
            clearCartBtn.addEventListener('click', clearCart);
            shippingOptions.forEach(option => {
                option.addEventListener('change', updateCartSummary);
            });

            proceedToCheckoutBtn.addEventListener('click', () => {
                if (cartData.items.length === 0) {
                    window.showAlert('Keranjang Anda kosong. Tambahkan produk sebelum checkout.', 'warning');
                    return;
                }
                // Anda dapat mengarahkan pengguna ke halaman checkout atau memicu modal checkout
                window.location.href = '/orders/checkout'; // Arahkan ke halaman checkout
            });

            // Panggil fungsi untuk mengambil item keranjang saat DOM dimuat
            fetchCartItems();

            // Panggil updateCartItemCount saat DOM fully loaded
            if (typeof window.updateCartItemCount === 'function') {
                window.updateCartItemCount();
            }
        });
    </script>
</body>
</html>
